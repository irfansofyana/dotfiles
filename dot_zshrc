# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export SPACESHIP_BATTERY_SHOW="false"

# Path to your oh-my-zsh installation.
export ZSH="/home/irfansofyana/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="geoffgarside"
ZSH_THEME="spaceship"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
   git
   zsh-autosuggestions
   zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# TCFRAME
export TCFRAME_HOME="/mnt/d/competitive-programming/tcframe/tcframe_1.6.0"
alias tcframe=$TCFRAME_HOME/scripts/tcframe

# FOR TKINTER
export DISPLAY=:0;

# FOR pipreqs
export PATH=$PATH:~/.local/bin

# ssh-agent
env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
    (umask 077; ssh-agent >| "$env")
    . "$env" >| /dev/null ; }

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
    agent_start
    ssh-add
elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
    ssh-add
fi

unset env


# ENV HADOOP
# export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
# export HADOOP_HOME=/home/irfansofyana/hadoop/hadoop-3.2.1
# export PATH=$PATH:$HADOOP_HOME/bin
# export CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath):$CLASSPATH

# TASKS CLI
export TASKS_CLI=/mnt/d/project/tasks-cli
export PATH=$PATH:$TASKS_CLI/bin

# GOLANG
export GOROOT="/usr/local/go"
export GOPATH="$HOME/go" # or any directory to put your Go code
export PATH="$PATH:$GOROOT/bin:$GOPATH/bin"
export GO111MODULE=on

# LINKERD
export PATH=$PATH:$HOME/.linkerd2/bin

# TODO-CLI
export TODO_CLI=/home/irfansofyana/project/todo-cli/src/dist/todo-cli
export PATH=$PATH:$TODO_CLI

# NODE
export NODE_V16_3=/usr/local/bin/node
export PATH=$PATH:$NODE_V16_3

# nvim
export NVIM_PATH=/home/irfansofyana/nvim-bin
export PATH=$PATH:$NVIM_PATH

# chezmoi
export CHEZMOI_PATH=/home/irfansofyana/bin
export PATH=$PATH:$CHEZMOI_PATH


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/irfansofyana/google-sdk/google-cloud-sdk/path.zsh.inc' ]; then . '/home/irfansofyana/google-sdk/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/irfansofyana/google-sdk/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/irfansofyana/google-sdk/google-cloud-sdk/completion.zsh.inc'; fi

export GOPRIVATE="github.com/xendit"

alias myvault="cd /mnt/d/my-vault/"
alias mysecondbrain="cd /mnt/d/MySecondBrain/"

[[ -s "/home/irfansofyana/.gvm/scripts/gvm" ]] && source "/home/irfansofyana/.gvm/scripts/gvm"

alias clip=clip.exe
